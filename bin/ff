#!/usr/bin/env python2

# fast find: search by file name substring from current directory
# python2 >= 2.7 required

import argparse
import os.path

parser = argparse.ArgumentParser(description='Fast find.')
parser.add_argument('-a', dest='abspath', action='store_true', default=False, help='Print absolute paths, not relative.')
parser.add_argument('-n', dest='noic', action='store_true', default=False, help='Do not ignore case (ignored by default).')
parser.add_argument('term', metavar='TERM', help='Search term.')
args = parser.parse_args()

search_term = args.term.decode('utf-8')
show_abspath = args.abspath
noic = args.noic

if noic == False:
    search_term = search_term.lower()

def visit(arg, dirname, names):
    if dirname.endswith('.git') or dirname.endswith('.hg') or dirname.endswith('.svn'):
        return
    for fn in names:
        s = fn
        if noic == False:
            s = fn.lower()
        if s.find(search_term) == -1:
            continue
        full_name = os.path.join(dirname, fn)
        print(full_name)

if show_abspath == True:
    start = os.getcwd()
else:
    start = '.'

start = start.decode('utf-8')
os.path.walk(start, visit, False)